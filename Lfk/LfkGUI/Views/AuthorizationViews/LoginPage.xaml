<Page x:Class="LfkGUI.Views.AuthorizationViews.LoginPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:LfkGUI"
      xmlns:validation="clr-namespace:LfkGUI.Validation"
      xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
      xmlns:converter="clr-namespace:LfkGUI.ViewModels.Converters"
      xmlns:password="clr-namespace:LfkGUI.ViewModels.Addition"
      mc:Ignorable="d" 
      d:DesignHeight="400" d:DesignWidth="400"
      Title="LoginPage" DataContext="{Binding}" Validation.Error="Page_Error">
    <Grid>
        <DockPanel LastChildFill="True">
            <materialDesign:Card  DockPanel.Dock="Top" Padding="20" Width="300"  Margin="10">
                <TextBlock Style="{DynamicResource MaterialDesignTitleTextBlock}" 
                           Foreground="{DynamicResource PrimaryHueLightBrush}"
                           Text="{DynamicResource PleaseLoginString}"/>
            </materialDesign:Card>
            <StackPanel  DockPanel.Dock="Bottom" Orientation="Vertical"  VerticalAlignment="Stretch">
                <DockPanel Style="{DynamicResource LabeledTextInputDockPanel}" >
                    <Label DockPanel.Dock="Left" Content="{DynamicResource EmailString}" FontWeight="Bold"/>
                    
                    <TextBox TabIndex="0"  Style="{DynamicResource StandardTextInput}">
                        <TextBox.Text>
                            <Binding Path="Email" Mode="TwoWay" 
                                     UpdateSourceTrigger="PropertyChanged"
                                     ValidatesOnDataErrors="True"
                                     ValidatesOnNotifyDataErrors="True"
                                     NotifyOnValidationError="True" >
                                <Binding.ValidationRules>
                                    <validation:EmailValidationRule ValidatesOnTargetUpdated="True"/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                    
                </DockPanel>

                <DockPanel  Style="{DynamicResource LabeledTextInputDockPanel}" >
                    <Label DockPanel.Dock="Left"  Content="{DynamicResource PasswordString}" FontWeight="Bold"/>
                    <PasswordBox Style="{DynamicResource StandardPasswordInput}" TabIndex="1" >
                        <password:BoundPasswordBox.BoundPassword>
                            <Binding Path="Password" Mode="TwoWay" 
                                     UpdateSourceTrigger="PropertyChanged"
                                     ValidatesOnDataErrors="True"
                                     ValidatesOnNotifyDataErrors="True"
                                     NotifyOnValidationError="True" >
                                <Binding.ValidationRules>
                                    <validation:PasswordValidationRule ValidatesOnTargetUpdated="True" />
                                </Binding.ValidationRules>
                            </Binding>
                        </password:BoundPasswordBox.BoundPassword>
                    </PasswordBox>
                </DockPanel>
                
                <DockPanel  Style="{DynamicResource LabeledTextInputDockPanel}">
                    <Button x:Name="LoginButton" 
                        Content="{DynamicResource LoginString}" 
                        Command="{Binding LoginCommand}" IsDefault="True">
                        <Button.Style>
                            <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignRaisedButton}">
                                <Setter Property="Margin" Value="0,30,0,0"/>
                                <Setter Property="Width" Value="150"/>
                                <Setter Property="IsEnabled" Value="False"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ValidationErrors.Count}" Value="0">
                                        <Setter Property="IsEnabled" Value="True"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </DockPanel>
            </StackPanel>

        </DockPanel>

    </Grid>
</Page>
